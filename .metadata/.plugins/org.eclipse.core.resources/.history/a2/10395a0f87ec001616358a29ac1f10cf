package kr.co.mini5.user.servlet;

import java.io.IOException;
import java.math.BigInteger;
import java.security.SecureRandom;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import kr.co.mini5.user.dao.UserDAO;
import kr.co.mini5.vo.UserVO;

@WebServlet("/user/user")
public class UserServlet extends HttpServlet{

	// CSRF 방지를 위한 상태 토큰 생성 코드
			// 상태 토큰은 추후 검증을 위해 세션에 저장되어야 한다.
			
	public String generateState()
	{
		SecureRandom random = new SecureRandom();
		return new BigInteger(130, random).toString(32);
	}

	@Override
	public void service(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		
		
		
		
		// 상태 토큰으로 사용할 랜덤 문자열 생성
		String state = generateState();
		// 세션 또는 별도의 저장 공간에 상태 토큰을 저장
		request.session().attribute("state", state);
		return state;
		
		request.setCharacterEncoding("utf-8");
		String id = request.getParameter("id");
		String pass = request.getParameter("pass");
		UserVO param = new UserVO();
		param.setId(id);
		param.setPass(pass);
		
		UserDAO dao = new UserDAO();
		UserVO user = dao.getUserinfo(param);
		
		if(user ==null) {
			request.setAttribute("msg", "입력하신 정보가 올바르지 않습니다.");
			RequestDispatcher rd = request.getRequestDispatcher("/jsp/view/user/userForm.jsp");
			rd.forward(request, response);
		}
		
		if(id.equals(user.getId()) && pass.equals(user.getPass())){
		
			UserVO login = new UserVO();
			login.setId(user.getId());
			login.setPass(user.getPass());
			login.setNickName(user.getNickName());
			
			HttpSession session = request.getSession();
			session.setAttribute("user", user);
			
			response.sendRedirect(request.getContextPath() +"/main/main");
		}
		else{
			request.setAttribute("msg", "입력하신 정보가 올바르지 않습니다.");
			RequestDispatcher rd = request.getRequestDispatcher("/jsp/view/user/userForm.jsp");
			rd.forward(request, response);
		}
	}
}
